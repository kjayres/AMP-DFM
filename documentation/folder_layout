everything should be refactored to run cleanly like well structured code - sh files should be written only to run scripts on the hpc and be minimal, all parameters or needed details should be stored in the respective python or config files.

Context and goals
- This folder is a cleaned, self-contained refactor of the antimicrobial peptide discrete flow matching project.
- The work adapts Pranam Chatterjee's discrete flow matching for peptides and ligand-binding to antimicrobial peptides, his work is under mog_dfm but outside ampflow. Eveyrthing will need to be cleanly and carefully refactored under amp_dfm which will need a proper layout such that it is shareable.
- Previously used utilities and scripts lived under /rds/general/user/kja24/home/mog_dfm/ampflow; only the minimal required utilities will be vendored here with attribution so amp_dfm stands alone. Only amp_dfm will be pushed to the shared repo.

HPC usage policy
- .sh files exist only to run jobs on the cluster and must stay minimal.
- Parameters and experiment settings live in config files (YAML/TOML) or Python modules, not in .sh files.
- Use the mog-dfm conda environment and activate it before running any project scripts.
- Do not run heavy jobs on the login node; submit through the .sh wrappers.

all sh files should look like:

/rds/general/user/kja24/home/mog_dfm/amp_dfm/scripts/hpc_cluster/template_hpc_job_script.sh

i.e. contain minimal extra detail and be ready to run - extra detail on model settings or file save locations should be stored in the .py file, config or toml files or somewhere else appropriate.

everything gets renamed from hemolysis to haemolysis and antimicrobial_activity to antimicrobial_activity

code should be clean, minimal and not overly bloated or with uneeded docstrings or comments but still work exactly as the oirginal did in terms of purpose and outputs

amp_dfm/
├── src/
│   └── ampdfm/                          # 📦 Main package
│       ├── __init__.py
│       ├── dfm/                         # ← Move from root /dfm
│       │   ├── __init__.py
│       │   ├── flow_matching/
│       │   ├── models/                  # CNNModel, CNNModelPep
│       │   └── guidance/                # Pure Python guidance logic
│       ├── classifiers/                 # Classifier classes
│       │   ├── __init__.py
│       │   ├── base.py
│       │   ├── antimicrobial_activity.py
│       │   ├── haemolysis.py
│       │   └── cytotoxicity.py
│       ├── utils/
│       │   ├── __init__.py
│       │   ├── aa_vocab.py
│       │   ├── dataloader.py
│       │   ├── dataset.py
│       │   ├── flow_utils.py
│       │   └── parsing.py
│       └── pipelines/                   # ← Rename /pipeline to this
│           ├── __init__.py
│           ├── mog.py                   # run_mog_sampling()
│           ├── train.py                 # train_pepdfm()
│           └── sample_uncond.py
│
├── scripts/                             # ✅ Already organized
│   ├── hpc_cluster/                     # ✅ Good
│   ├── train_classifiers/               # ✅ Good
│   ├── data_preprocessing/              # ✅ Good (or rename to data_prep)
│   ├── model_validation/                # ✅ Good (or merge with analysis)
│   ├── visualisations/                  # ✅ Good (or rename to visualization)
│   └── analysis/                        # Add: comparison scripts
│
├── configs/                             # ✅ Good
│   ├── sample_mog.yaml
│   ├── train_pepdfm.yaml
│   └── ...
│
├── checkpoints/                         # ✅ Perfect structure
│   ├── dfm/
│   └── classifiers/
│
├── data/                                # ✅ Good structure
│   ├── dfm/
│   ├── classifiers/
│   ├── filtered/
│   └── embeddings/
│
├── outputs/                             # ✅ Good
│
├── docs/                                # Add: Documentation
│   ├── WORKFLOWS.md
│   └── API.md
│
├── pyproject.toml                       # Add: Package metadata
├── README.md                            # Update: Main documentation
├── .gitignore                           # Add: Git ignore rules
└── amp-dfm.yml                          # Add: Conda environment
